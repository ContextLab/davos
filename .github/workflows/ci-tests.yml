name: CI Tests

#on: [push, pull_request]
on:
  push:
    paths-ignore:
      - 'paper/**'
      - '.gitattributes'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'paper/**'
      - '.gitattributes'
      - 'LICENSE'
      - 'README.md'
  workflow_dispatch: 
    inputs: 
      debug_enabled:
        description: 'Pause before tests for tmate debugging'
        required: false
        default: 'false'
      notebook_type:
        description: 'Job type to debug {colab|jupyter|all}'
        required: false
        default: 'all'

defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  run-tests:
    name: "Run CI tests"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        notebook-type: [jupyter]
        python-version: [3.6, 3.7, 3.8, 3.9]
        ipython-version: ['==5.5.0', '>=7.0.0']
        include:
          - notebook-type: colab
            python-version: 3.7
            ipython-version: '==5.5.0'
    env:
      NOTEBOOK_TYPE: ${{ matrix.notebook-type }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      IPYTHON_VERSION: ${{ matrix.ipython-version }}
      GMAIL_ADDRESS: ${{ secrets.DAVOS_GMAIL_ADDRESS }}
      GMAIL_PASSWORD: ${{ secrets.DAVOS_GMAIL_PASSWORD }}
      RECOVERY_GMAIL_ADDRESS: ${{ secrets.DAVOS_RECOVERY_GMAIL_ADDRESS }}
    steps:
      - uses: actions/checkout@v2

      - name: install miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: setup base environment
        run: |
          # install Python 3.9 (used to run notebooks via selenium, not the 
          # tests themselves)
          conda install python=3.9
          # install Firefox browser
          sudo apt-get install firefox
          # install python packages
          pip install \
              pytest==6.2 \
              "selenium>=3.141" \
              geckodriver-autoinstaller
          # install geckodriver
          driver_path=$(python -c '
          
          import shutil
          from pathlib import Path
          
          import geckodriver_autoinstaller
          
          
          driver_src = Path(geckodriver_autoinstaller.install(cwd=True))
          driver_dest = driver_src.rename(driver_src.parents[1].joinpath(driver_src.name))
          driver_src.parent.rmdir()
          print(driver_dest)
          
          ')
          # export driver path as environment variable
          echo "DRIVER_PATH=$driver_path" >> $GITHUB_ENV

      - name: setup notebook kernel environment
        if: matrix.notebook-type == 'jupyter'
        run: |
          # install jupyter notebooks in base environment
          pip install notebook "ipykernel>=5.0.0"
          # create kernel environment
          conda create -n kernel-env python=$PYTHON_VERSION
          printenv
          conda --help
          conda info --envs
          
          conda activate kernel-env
          
          # install IPython, ipykernel, davos
          pip install "IPython$IPYTHON_VERSION" "ipykernel>=5.0.0"
          pip install .
          # make environment available as a jupyter kernel
          python -m ipykernel install --prefix=/usr/share/miniconda --name=kernel-env
          conda deactivate
          jupyter kernelspec list
          
      - name: launch Jupyter server
        if: matrix.notebook-type == 'jupyter'
        run: jupyter notebook --no-browser --port=8888 --NotebookApp.token= &

      - name: debug runner
        if: |
          github.event_name == 'workflow_dispatch'
          && github.event.inputs.debug_enabled == 'true'
          && (matrix.notebook-type == 'all' || matrix.notebook-type == github.event.inputs.notebook_type)
        uses: mxschmitt/action-tmate@v3

      - name: run pytest
        run: pytest -sv tests/
