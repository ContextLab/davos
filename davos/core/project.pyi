from pathlib import PosixPath
from typing import Literal, NoReturn

__all__ = list[Literal['Project', 'get_notebook_path', 'use_default_project']]

DAVOS_CONFIG_DIR: PosixPath
DAVOS_PROJECT_DIR: PosixPath
PATHSEP: Literal['/', '\\']
PATHSEP_REPLACEMENT: Literal['___']
SITE_PACKAGES_SUFFIX: str

class ProjectChecker(type):
    def __call__(cls, name: PosixPath | str) -> AbstractProject | ConcreteProject: ...

class Project(metaclass=ProjectChecker):
    name: str
    safe_name: str
    project_dir: PosixPath
    site_packages_dir: PosixPath
    def __init__(self, name: str) -> None: ...
    def __del__(self) -> None: ...
    def __repr__(self) -> str: ...
    def _set_names(self, name: str) -> None: ...
    def rename(self, new_name: PosixPath | str) -> NoReturn: ...
    def update_name(self) -> NoReturn: ...

class AbstractProject(Project):
    def __repr__(self) -> str: ...

class ConcreteProject(Project):
    @property
    def installed_packages(self) -> list[str]: ...
    def remove(self, yes: bool = ...) -> None: ...

def get_notebook_path() -> PosixPath | str: ...
def cleanup_project_dir_atexit(dirpath: PosixPath) -> None: ...
def prune_project(proj: ConcreteProject | PosixPath | str) -> NoReturn: ...
def prune_projects() -> NoReturn: ...
def use_default_project() -> None: ...
